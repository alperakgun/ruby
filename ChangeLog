Fri Nov 20 08:15:45 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm.c (rb_vm_start): handshake.

Fri Nov 20 08:14:53 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* string.c (rb_str_copy_to_vm): reset instance variables.

Fri Nov 20 04:39:40 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm.c (rb_vm_send, rb_vm_recv): supported strings.

Fri Nov 20 04:38:44 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (rb_queue_shift_wait): fixed the case of no-timeout.

Tue Nov 17 12:00:56 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm_core.h (rb_vm_t): manage references from other VMs.

	* mvm.c (ruby_vm_destruct): ditto.

	* vm.c (ruby_vm_free, vm_init2, vm_create, InitVM_VM): ditto.

	* vm.c (rb_vm_send): reject terminated VM.

Mon Nov 16 19:18:37 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (ruby_dirfd): need O_DIRECTORY and O_LARGEFILE.

	* vm.c (ruby_make_bare_vm): initialize thread cwd.

Mon Nov 16 18:55:30 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread_pthread.c (get_stack): fixed stack start address on the
	  platforms using pthread_attr_t.

Mon Nov 16 01:36:50 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (rb_queue_shift_wait): added.

	* vm.c (rb_vm_send, rb_vm_recv): new methods.

	* vm_core.h (rb_queue_t): added condition variable.

	* vm_core.h (rb_vm_t): moved message queue from rb_thread_t.

Mon Nov 16 01:14:02 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm.c (rb_vm_current): new method RubyVM.current.

	* vm.c (rb_vm_to_s): include address of rb_vm_t in RubyVM#to_s.

Mon Nov 16 01:11:02 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* mvm.c (ruby_vm_new): create new vm unless initial vm.

	* thread.c (thread_start_func_2): ruby_vm_destruct destroys
	  global_vm_lock.

Mon Nov 16 01:08:58 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (rb_thread_start_timer_thread),
	  thread_{pthread,win32}.c (native_stop_timer_thread): deal with
	  working count.

	* thread_pthread.c (native_cond_timedwait): use timeval instead of
	  timespec.

	* thread_win32.c (ruby_native_cond_timedwait): added.

Mon Nov 16 01:04:25 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* include/ruby/public_object.h (ruby_public_object_vmkey): moved
	  rb_fs, rb_output_fs, rb_rs, rb_default_rs, rb_output_rs to VM
	  specific.

	* common.mk (RUBY_H_INCLUDES): include private_object.h.

Sun Nov 15 07:01:13 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* marshal.c (marshal_dump): needs to set compat_allocator_tbl.

Sat Nov 14 08:48:38 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* mvm.c (ruby_vm_alone, ruby_vm_main_p): new functions.

	* thread.c (thread_start_func_2): ignore signals on sub VMs.

	* vm.c (rb_vm_mark, vm_memsize): ignore other VM.

	* vm.c (rb_vm_initialize): add last NULL.

Fri Nov 13 19:56:16 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* mvm.c (vm_join): does nothing when vm has died.

	* vm.c (rb_vm_free): notify to waiting vm.

	* vm.c (vm_create): global_vm_lock is already locked.

Fri Nov 13 16:28:22 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (ruby_native_thread_create): start new thread with
	  rb_thread_t.  split from thread_create_core.

	* vm.c (rb_vm_start, rb_vm_join): new methods, #start and #join.

	* vm.c (vm_make_main_thread): make bare main thread.  split from
	  ruby_make_bare_vm.

Fri Nov 13 10:14:11 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* eval.c (ruby_vm_cleanup): not destruct vm, nor re-send signal.

	* eval.c (ruby_cleanup): destruct current vm and re-send signal.

	* parse.y (Init_sym): use separate object space.

Thu Nov 12 16:34:49 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm.c (thread_recycle_stack, rb_thread_recycle_stack_release):
	  stack belongs to no object space.

Wed Nov 11 18:20:36 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* gc.c (rb_objspace_free): finalizer should have been done already.

	* vm.c (rb_vm_free): VM does not belong to any object spaces.

	* vm.c (ruby_make_bare_vm): thread belongs to its VM object space.

Mon Nov  9 20:56:50 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (do_stat, do_lstat): fixed typo.

Fri Nov  6 16:15:17 2009  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (rb_dir_aref, rb_dir_glob): added methods, Dir#[] and
	  Dir#glob.

Thu Dec 25 01:52:34 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (thread_start_func_2): sets native thread key.

Thu Dec 25 01:48:53 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (Init_Thread): separated per-process initialization
	  from InitVM_Thread.

	* thread_{pthread,win32}.c (Init_native_thread): ditto.

Wed Dec 17 18:00:15 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* inits.c (rb_vm_call_inits): no longer passes current vm.

Sun Nov 30 15:26:44 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* inits.c (rb_vm_call_inits): let all InitVM functions use
	  ruby_vm_t instead of rb_vm_t.

Fri Nov  7 20:42:47 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* parse.y (Init_sym):  symbol objectspace should not be GCed.

Tue Sep 16 05:04:56 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* configure.in (rb_cv_thread_specific): check if no warnings.

Tue Sep  9 01:52:28 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* io.c (Init_IO): max_file_descriptor_lock is per-process resource.

Tue Sep  9 00:55:34 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* eval.c (ruby_vm_init): split from ruby_init.

	* eval.c (ruby_vm_run): cleans up VM always.

	* inits.c (rb_call_inits): separated per-process and per-VM
	  intializations.

	* parse.y (sym_str_new): creates VM-neutral string.

	* vm_core.h (struct rb_vm_struct): includes method cache.

	* vm.c (vm_init2): initializes method cache.

	* vm_eval.c, vm_method.c: use method cache in VM.

	* mvm.c (specific_key): must be initialized.

Tue Sep  9 00:30:28 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* st.c (st_init_table_with_size, ADD_DIRECT): fixed typo.

Mon Sep  8 20:10:12 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* bignum.c (power_cache_get_power0): no need to register address.

Mon Sep  8 17:26:51 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* st.c (garbage_collect): checks if memory can be reclaimed.

Mon Sep  8 06:38:22 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (rb_thread_check_trap_pending): fix for MVM.

	* thread.c (rb_queue_empty_p): added.

	* vm_core.h (rb_thread_set_current_raw): fixed typo.

Wed Sep  3 10:17:55 2008  Koichi Sasada  <ko1@atdot.net>

	* include/ruby/mvm.h, include/ruby/ruby.h, main.c: 
	  main.c doesn't need "ruby.h" any more.

	* thread_pthread.c, thread_win32.c (ruby_init_stack):
	  change parameter type "VALUE *" to "void *".

Wed Sep  3 10:04:46 2008  Koichi Sasada  <ko1@atdot.net>

	* mvm.c, eval.c, ruby.c, vm.c, vm_core.h: pass "make test".

Mon Sep  1 11:31:26 2008  Koichi Sasada  <ko1@atdot.net>

	* mvm.c: added.

	* common.mk: ditto.

	* eval.c, eval_intern.h, include/ruby/intern.h, include/ruby/mvm.h,
	  include/ruby/public_object.h, include/ruby/ruby.h, io.c, main.c,
	  main.c, pack.c, ruby.c, thread.c, thread_pthread.c,
	  thread_pthread.h, vm.c, vm_core.h: fix Ruby/MVM API.
	  On this commit, only miniruby is built, but not working.

Sun Aug 31 12:41:09 2008  Koichi Sasada  <ko1@atdot.net>

	* sampledriver/main.c: update.

Sun Aug 31 12:32:41 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (dir_chdir): fixed typo.

Sun Aug 31 00:40:45 2008  Koichi Sasada  <ko1@atdot.net>

	* sampledriver/main.c: added.

Sun Aug 31 00:02:49 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* string.c (rb_str_wrap_cstr): new function.

	* dir.c (ruby_dirfd): returns directory fd.

	* dir.c (chdir_restore): restores thread cwd.

	* file.c (ruby_fd_getcwd): returns path for fd.

Sat Aug 30 22:45:00 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (rb_queue_shift): fix memory leak.

Sat Aug 30 20:06:24 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm_core.h (struct rb_thread_struct): added signal and message
	  queues.

	* thread.c (rb_queue_initialize, rb_queue_destroy, rb_queue_push),
	  (rb_queue_shift): new functions.

	* thread.c (rb_thread_execute_interrupts): uses signal queue.

	* thread.c (ruby_vm_send_signal): extracted from vm_send_signal.

	* vm.c (vm_free): unlock and destroys global_vm_lock.

	* vm.c (th_init2, thread_free): initializes and destroys signal and
	  message queues.

Sat Aug 30 16:38:23 2008    <nobu@ruby-lang.org>

	* vm_core.h (struct rb_vm_struct): replaced signal staff with trap
	  staff.

	* signal.c (signal_buff): per process resouce now.

	* signal.c (trap_list): moved to VM.

	* signal.c (rb_get_next_signal): reverted.

	* signal.c (rb_trap_exit): trap_pending_list was no longer used.

	* thread.c (timer_thread_function): delivers buffered per-process
	  signals to each VMs.

	* vm.c (rb_vm_mark): marks trap_list.

Fri Aug 29 19:44:50 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* common.mk (VM_CORE_H_INCLUDES): needs mvm.h.

	* signal.c (sighandler), thread.c (timer_thread_function): delivers to
	  all VMs.

	* thread_{pthread,win32}.c (ruby_native_thread_lock_initialize),
	  (ruby_native_thread_lock_destroy): exported.

	* vm_core.h (struct rb_vm_struct): added signal lock.

	* vm.c (vm_manager): manages MVM.

	* vm.c (ruby_vm_foreach): iterates over all VMs.  returnig false stops
	  the iteration.

	* vm.c (vm_free): unregister and free VM structure.

	* vm.c (vm_init2): moved initialization of locks and object space.

	* vm.c (ruby_vm_send_signal, ruby_vm_get_next_signal): sends/retreives
	  VM signal.

Thu Jul 31 01:36:02 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* file.c (rb_file_s_join, Init_File): moved separator to VM.

	* complex.c (make_patterns), rational.c (make_patterns): ditto.

	* include/ruby/mvm.h (rb_thread_lock_t): needed for inter-VM lock.

	* io.c (max_file_descriptor_lock): should be initialized.

	* pack.c (pack_unpack): lock for MVM.

Thu Jul 31 01:25:43 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (rb_mutex_unlock_all): mutex is no longer a ruby object.

Thu Jul 31 01:11:58 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread.c (ruby_vm_specific_ptr): fix for reallocation.

Fri Jul 25 23:24:07 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* thread_pthread.c (get_stack): subtract guard size.

	* thread_pthread.c (thread_start_func_1): fix for stack size
	  adjustment.

	* thread_pthread.c (ruby_stack_overflowed_p): take thread and the
	  address.

	* gc.c (ruby_stack_check): check overflow.

	* signal.c (sigsegv): use ruby_stack_overflowed_p.

Fri Jul 25 16:21:14 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* include/ruby/io.h (ruby_absolute_path_p): published.

	* io.c (rb_sysopen_prepare): fix for non-openat platforms.

	* thread.c (ruby_thread_getcwd): fix for non-openat platforms.

	* util.c (ruby_sys_getcwd): renamed and reverted.

Tue Jul 22 21:07:12 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (get_cwd_fd): returns int.

Thu Jul 17 13:13:37 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* ruby.c (process_options): set script_name directly and translate
	  before frozen.

	* ruby.c (set_arg0): now setter of VM specific variable is called for
	  the pointer instead of the key.

Thu Jul 17 06:09:48 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (get_cwd_fd): support for platforms which has fchdir but no
	  openat.

Fri Jul 11 16:45:20 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* Makefile.in (gvar): make global/static variables list.

Fri Jul 11 15:01:12 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* process.c (rb_run_exec_options): default to thread cwd.

Fri Jul 11 06:45:14 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* vm_core.h (rb_thread_t): per-thread cwd support.  [EXPERIMENTAL]

	* io.c (rb_sysopen), dir.c (dir_s_chdir),
	  file.c (ruby_readlink, ruby_absolute_path_p),
	  thread.c (thread_create_core, ruby_thread_getcwd, ruby_getcwd),
	  vm.c (Init_VM): ditto.

	* string.c (rb_str_wrap): wrap a heap pointer with string.

	* thread.c (ruby_system_alone): returns if only current VM is running.

Fri Jul 11 06:44:06 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (fcntl.h): needed for AT_FDCWD.

	* dir.c (rb_dir_mkdir, rb_dir_unlink, rb_dir_rmdir): fix for dirfd().

Mon Jul  7 02:11:34 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (rb_dir_open, rb_dir_fchmod, rb_dir_lchmod, rb_dir_fchown),
	  (rb_dir_lchown, rb_dir_fstat, rb_dir_lstat, rb_dir_utime),
	  (rb_dir_mkdir, rb_dir_rmdir, rb_dir_unlink, rb_dir_chdir): added.

	* file.c (rb_file_stat_new, rb_stat, ruby_futimesat): made public.

	* io.c (rb_openat): added.

Mon Jul  7 02:04:57 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* dir.c (dir_s_chdir): restore cwd by fchdir if possible.

Mon Jul  7 00:35:10 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* bignum.c (big2str_power_cache): moved to VM specific data.

Mon Jul  7 00:17:21 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* io.c (struct argf): use defin and defout instead of rb_stdin and
	  rb_stdout which are process global.

Mon Jul  7 00:00:21 2008  Nobuyoshi Nakada  <nobu@ruby-lang.org>

	* include/ruby/public_object.h: moved global variables to VM specific data.

Wed Oct 20 21:07:24 2010  URABE Shyouhei  <shyouhei@ruby-lang.org>

	* tool/file2lastrev.rb (self.output): git support.

	* version.h: ditto.

Wed Oct 20 21:05:17 2010  URABE Shyouhei  <shyouhei@ruby-lang.org>

	* include/ruby/vm.h: MVM the next generation.

Local variables:
mode: change-log
add-log-time-format: (lambda ()
  (let* ((time (current-time))
	 (system-time-locale "C")
	 (diff (+ (cadr time) 32400))
	 (lo (% diff 65536))
	 (hi (+ (car time) (/ diff 65536))))
  (format-time-string "%a %b %e %H:%M:%S %Y" (list hi lo) t)))
indent-tabs-mode: t
tab-width: 8
end:
